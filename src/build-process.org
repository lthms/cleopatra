#+TITLE: Cleopatraâ€™ Build Process
#+AUTHOR: Thomas Letan
#+HTML_LINK_UP: index.html

* ~boot.mk~

#+BEGIN_SRC makefile :tangle boot.mk
ARTIFACTS := build.log
CONFIGURE :=

init :
	@echo "    init  cleopatra"
	@cleopatra-run-elisp "${CLEOPATRA_DIRECTORY}/emacs.d/cleopatra-gen-proc.el" 2> build.log

-include ${CLEOPATRA_DIRECTORY}/deps.mk

prebuild :
build : prebuild
postbuild : build
	@echo "  update  gitignore"
	@cleopatra-update-gitignore ${CONFIGURE} ${ARTIFACTS}

.PHONY : init prebuild build postbuild
#+END_SRC

* ~cleopatra-gen-proc.el~

#+BEGIN_SRC emacs-lisp :tangle elisp/cleopatra-gen-proc.el :noweb yes :exports none
;;; cleopatra-gen-proc.el --- The cleopatra Emacs Library
;;; Commentary:
;;; Code:
<<cleopatra-gen-proc-el>>

(provide 'cleopatra-gen-proc)
;;; cleopatra-gen-proc.el ends here
#+END_SRC

#+BEGIN_SRC emacs-lisp :noweb-ref cleopatra-gen-proc-el
(defun cleopatra:gen-processes-tangle-publish (conf filename pub-dir)
  (let ((tangled (cleopatra:tangle-publish conf filename pub-dir))
        (proc (file-name-sans-extension (file-name-nondirectory  filename))))
    (insert
     (format "include %s.mk\n" proc)
     (format "CONFIGURE += %s\n" (mapconcat 'identity tangled " "))
     (format "prebuild : %s-prebuild\nbuild : %s-build\npostbuild : %s-postbuild\n"
             proc proc proc)
     (format "%s-build : %s-prebuild\n%s-postbuild : %s-build\n"
             proc proc proc proc)
     (format ".PHONY : %s-prebuild %s-build %s-postbuild\n"
             proc proc proc proc))))

(cleopatra:configure)
(setq org-publish-use-timestamps-flag nil)

(org-babel-do-load-languages
 'org-babel-load-languages
 '((shell . t)))

(setq org-publish-project-alist
      `(("cleopatra-gen-proc"
         :base-directory ,(getenv "CLEOPATRA_GENERATION_PROCESSES")
         :publishing-directory "."
         :publishing-function cleopatra:gen-processes-tangle-publish)))

(with-temp-buffer
  (org-publish-all)
  (write-file (concat (getenv "CLEOPATRA_DIRECTORY") "/deps.mk")))
#+END_SRC
* ~update-gitignore~

#+BEGIN_SRC bash :tangle bin/cleopatra-update-gitignore :shebang "#+/bin/bash"
BEGIN_MARKER="# begin generated files"
END_MARKER="# end generated files"

# remove the previous list of generated files to ignore
sed -i -e "/${BEGIN_MARKER}/,/${END_MARKER}/d" .gitignore
# remove trailing empty lines
sed -i -e :a -e '/^\n*$/{$d;N;};/\n$/ba' .gitignore

# output the list of files to ignore
echo "" >> .gitignore
echo ${BEGIN_MARKER} >> .gitignore
for f in $@; do
    echo "${f}" >> .gitignore
done
echo ${END_MARKER} >> .gitignore
#+END_SRC
